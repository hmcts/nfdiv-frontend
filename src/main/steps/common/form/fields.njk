{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/checkboxes/macro.njk" import govukCheckboxes %}
{% from "govuk/components/date-input/macro.njk" import govukDateInput %}

{% for fieldName, field in form.fields %}
  {% switch field.type %}
    {% case 'radios' %}
      {{ govukRadios({
          classes: field.classes,
          idPrefix: fieldName,
          name: fieldName,
          fieldset: {
            legend: {
              text: getContent(field.label),
              classes: "govuk-visually-hidden" if field.labelHidden else "govuk-fieldset__legend--m"
            }
          },
          items: formItems(field.values, formState[fieldName]),
          errorMessage: getError(fieldName)
        }) }}
    {% case 'checkboxes' %}
      {% for checkbox in field.values %}
        {# Required for sending an empty value when the checkbox has not been checked #}
        <input type="hidden" value="" name="{{ checkbox.name }}">
      {% endfor %}

      {{ govukCheckboxes({
        classes: field.classes,
        idPrefix: fieldName,
        name: fieldName,
        fieldset: {
          legend: {
            text: getContent(field.label),
            classes: "govuk-fieldset__legend--s"
          }
        },
        items: formItems(field.values, formState),
        errorMessage: getError(fieldName)
      }) }}
    {% case 'option' %}
      {{ govukSelect({
        id: fieldName,
        name: fieldName,
        label: {
          text: getContent(field.label)
        },
        items: formItems(field.values, formState[fieldName]),
        errorMessage: getError(fieldName)
      }) }}
    {% case 'date' %}
      {{ govukDateInput({
        id: fieldName,
        namePrefix: fieldName,
        fieldset: {
          legend: {
            text: getContent(field.label),
            classes: "govuk-visually-hidden" if field.labelHidden else "govuk-fieldset__legend--m"
          }
        },
        hint: {
          text: hint
        },
        items: formItems(field.values, formState[fieldName]),
        errorMessage: getError(fieldName)
      }) }}
    {% default %}
      {{ govukInput({
        id: fieldName,
        name: fieldName,
        classes: field.classes,
        label: {
          text: getContent(field.label),
          classes: "govuk-label--m"
        },
        hint: {
          html: getContent(field.hint)
        },
        value: formState[fieldName],
        attributes: field.attributes,
        errorMessage: getError(fieldName)
      }) }}
  {% endswitch %}
{% endfor %}
